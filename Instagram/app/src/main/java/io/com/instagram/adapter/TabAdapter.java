package io.com.instagram.adapter;import android.content.Context;import android.graphics.drawable.Drawable;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentManager;import android.support.v4.app.FragmentStatePagerAdapter;import android.support.v4.content.ContextCompat;import android.text.SpannableString;import android.text.Spanned;import android.text.style.ImageSpan;import io.com.instagram.R;import io.com.instagram.fragment.HomeFragment;/** * Created by rafaelcarvalho on 23/12/2017. */public class TabAdapter extends FragmentStatePagerAdapter{    private Context context;    //private String [] abas = new String[]{"HOME", "USUÀRIOS"};    private int[] icones = new int[]{R.drawable.ic_action_home, R.drawable.ic_people};    private int tamanhoIcones;    public TabAdapter(FragmentManager fm, Context c) {        super(fm);        this.context = c;        double escala = this.context.getResources().getDisplayMetrics().density;        tamanhoIcones = (int) (36 * escala );    }    @Override    public Fragment getItem(int position) {        Fragment fragment = null;        //buscando a posição do fragment        switch ( position ){            case 0:                fragment = new HomeFragment();                break;            case 1:                fragment = new UsuariosFragment();                break;        }        return fragment;    }    @Override    public CharSequence getPageTitle(int position) {        //return abas[ position ];        Drawable drawable = ContextCompat.getDrawable(this.context, icones[ position ] );        drawable.setBounds(0, 0, tamanhoIcones, tamanhoIcones);        //convertendo para string com imageSpan        ImageSpan imageSpan = new ImageSpan( drawable );        //Classe utilizada para retornar CharSequence        SpannableString spannableString = new SpannableString(" ");        spannableString.setSpan( imageSpan, 0, spannableString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);        return spannableString;    }    @Override    public int getCount() {        //return abas.length;        return icones.length;    }}